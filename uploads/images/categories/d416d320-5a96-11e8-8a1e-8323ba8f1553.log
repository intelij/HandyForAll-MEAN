=====================================
 From: Dragon-MacBook (Dragon/Champions-MacBook-Pro/192.168.1.222/champion)
  at Thu Apr 19 05:54:34 2018 
  (files) FB30FCE5-BE1A-4CB9-8CD2-138A22CD666F.jpg
-------------------------------------


=====================================
 From: Dragon-MacBook (Dragon/Champions-MacBook-Pro/192.168.1.222/champion)
  at Fri Apr 20 06:17:55 2018 
-------------------------------------
ubuntu@ec2-54-167-161-234.compute-1.amazonaws.com

=====================================
 From: Dragon-Ubuntu *(Dragon/Dragon-Ubuntu/192.168.1.112/dragon)
  at Fri Apr 20 06:22:45 2018 
-------------------------------------
http://www.hostingadvice.com/how-to/install-nodejs-ubuntu-14-04/

=====================================
 To: Jamal Mahfuz (Jamals-MacBook-Pro/192.168.1.28/jamalmahfuz)
  at Fri Apr 20 08:57:56 2018 (sealed)
-------------------------------------
release-ver-2.3.5

=====================================
 From: Dragon-MacBook (Dragon/Champions-MacBook-Pro/192.168.1.222/champion)
  at Fri Apr 20 09:28:29 2018 
-------------------------------------
https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-14-04

=====================================
 From: Dragon-MacBook (Dragon/Champions-MacBook-Pro/192.168.1.222/champion)
  at Fri Apr 20 09:29:39 2018 
-------------------------------------
https://gist.github.com/davestevens/c9e437afbb41c1d5c3ab

=====================================
 To: J_Lenovo (KWS/DESKTOP-QV7LV6U/192.168.1.15/MyPC-<c93877d4ed206914>)
  at Sat Apr 21 03:03:14 2018 (RSA2/Signed)(sealed)
-------------------------------------
nyam.enkhbat.1029@gmail.com
munkh.j.1029@gmail.com

=====================================
 From: Wolf (DESKTOP-VEU5JBL/192.168.1.12/Wolf-<5ea2df1a4a8a9424>)
  at Sat Apr 21 08:10:25 2018 (RSA2/Signed)(sealed)
-------------------------------------
m17080956992@163.com

=====================================
 To: Dragon-MacBook (Dragon/Champions-MacBook-Pro/192.168.1.222/champion)
  at Tue Apr 24 03:18:08 2018 (sealed)
-------------------------------------
https://getgrover.com: RoR & React (frontend)
https://www.handy.com: RoR & Angular (backend)
https://squareup.com: RoR & Knockout.js (backend)

=====================================
 From: Jamal Mahfuz (Jamals-MacBook-Pro/192.168.1.28/jamalmahfuz)
  at Tue Apr 24 10:18:22 2018 
-------------------------------------
https://www.hostinger.co.id/hosting-vps
https://vpsfast.net/indonesia-vps

=====================================
 To: Jamal Mahfuz (Jamals-MacBook-Pro/192.168.1.28/jamalmahfuz)
  at Tue Apr 24 11:12:05 2018 (sealed)
-------------------------------------
https://vpsfast.net/indonesia-vps

=====================================
 From: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Wed Apr 25 06:46:09 2018 (RSA2/Signed)(sealed)
-------------------------------------
https://github.com/johnpapa/angular-styleguide/blob/master/a2/README.md

=====================================
 To: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Wed Apr 25 17:51:22 2018 (RSA2/Signed)(sealed)
  (files) thumbnail-database-cleaner.zip
-------------------------------------


=====================================
 To: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Wed Apr 25 18:48:09 2018 (RSA2/Signed)(sealed)
  (files) UVS11Plus_TBYB_EUS.exe
-------------------------------------


=====================================
 To: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Wed Apr 25 18:54:12 2018 (RSA2/Signed)(sealed)
  (files) UVS11Plus_TBYB_EUS.exe~~
-------------------------------------


=====================================
 To: Wolf (DESKTOP-VEU5JBL/192.168.1.12/Wolf-<5ea2df1a4a8a9424>)
  at Thu Apr 26 03:40:16 2018 (RSA2/Signed)(sealed)
-------------------------------------
timeclock.freeeup.com
freeeup.tBorjigin@gmail.com

=====================================
 From: acer *(acer-OptiPlex-3020/192.168.1.10/acer)
  at Thu Apr 26 03:43:40 2018 
  (files) receipt
-------------------------------------


=====================================
 From: J_Nyam (KWS/MyMacs-iMac/192.168.1.19/mymac)
  at Thu Apr 26 04:04:59 2018 
-------------------------------------
https://www.upwork.com/fl/itworksinua

=====================================
 From: Martin Andersen (DESKTOP-101Q8BV/192.168.1.11/Martin Andersen-<f4e7914c6da04e84>)
  at Thu Apr 26 10:59:56 2018 (RSA2/Signed)(sealed)
-------------------------------------
https://www.hostinger.com/private-server

=====================================
 From: Dragon-MacBook (Dragon/Champions-MacBook-Pro/192.168.1.222/champion)
  at Thu Apr 26 14:20:45 2018 
-------------------------------------
https://www.terminalworks.com/remote-desktop-webcam
https://www.youtube.com/watch?v=njixD_aOp3c&feature=youtu.be

=====================================
 From: Martin Andersen (DESKTOP-101Q8BV/192.168.1.11/Martin Andersen-<f4e7914c6da04e84>)
  at Thu Apr 26 18:27:20 2018 (RSA2/Signed)(sealed)
-------------------------------------
https://www.natanetwork.com/portal/cart.php

=====================================
 To: Jamal Mahfuz (Jamals-MacBook-Pro/192.168.1.28/jamalmahfuz)
  at Thu Apr 26 18:51:19 2018 (sealed)
-------------------------------------
batu.zaya.89@gmail.com
B@tuzaya19890206


=====================================
 To: Jamal Mahfuz (Jamals-MacBook-Pro/192.168.1.28/jamalmahfuz)
  at Thu Apr 26 18:52:04 2018 (sealed)
  (files) payment.png
-------------------------------------


=====================================
 To: Jamal Mahfuz (Jamals-MacBook-Pro/192.168.1.28/jamalmahfuz)
  at Thu Apr 26 19:08:59 2018 (sealed)
  (files) back_25.jpg, batu_25.jpg
-------------------------------------


=====================================
 From: Jason Ray (DESKTOP-6C92UPE/192.168.1.3/Jason Ray-<293e8a24db1d05bc>)
  at Thu Apr 26 19:13:35 2018 (multi)(RSA2/Signed)(sealed)
  (files) backup(2016-10-12-07-56AM).zip, frontend(2016-07-22-1-31).zip
-------------------------------------


=====================================
 From: Martin Andersen (DESKTOP-101Q8BV/192.168.1.11/Martin Andersen-<f4e7914c6da04e84>)
  at Thu Apr 26 19:21:17 2018 (RSA2/Signed)(sealed)
  (files) script.txt
-------------------------------------


=====================================
 To: Jamal Mahfuz (Jamals-MacBook-Pro/192.168.1.28/jamalmahfuz)
  at Thu Apr 26 19:28:58 2018 (sealed)
-------------------------------------
https://github.com/tulga870911

=====================================
 To: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Thu Apr 26 19:32:29 2018 (RSA2/Signed)(sealed)
-------------------------------------
https://github.com/tulga870911/laravel-admin

=====================================
 From: Jason Ray (DESKTOP-6C92UPE/192.168.1.3/Jason Ray-<293e8a24db1d05bc>)
  at Fri Apr 27 03:25:04 2018 (RSA2/Signed)(sealed)
-------------------------------------
paulino@neoplace.com.br

=====================================
 From: Jason Ray (DESKTOP-6C92UPE/192.168.1.3/Jason Ray-<293e8a24db1d05bc>)
  at Fri Apr 27 03:26:55 2018 (RSA2/Signed)(sealed)
-------------------------------------
scrapping and deep learning for Neoplace Tech

=====================================
 From: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Fri Apr 27 17:21:10 2018 (RSA2/Signed)(sealed)
  (files) preview-1.mp3, preview-3.mp3
-------------------------------------


=====================================
 From: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Fri Apr 27 23:49:17 2018 (RSA2/Signed)(sealed)
-------------------------------------

1. https://ideaserver.pro/


2. https://vk.com/@maxstern-jetbrains-crack


3. http://jetbrains.license.laucyun.com/


=====================================
 From: J_Lenovo (KWS/DESKTOP-QV7LV6U/192.168.0.110/MyPC-<c93877d4ed206914>)
  at Sat Apr 28 18:02:49 2018 (RSA2/Signed)(sealed)
-------------------------------------
 * 이번주 Upwork 를 리용하여 US, Josh 대방의 Arduino Phonegap setup 과제를 30시간 진행하였습니다.
 * 이번주 Jason 대방의 Daystar TV app 과제를 20시간 진행하였습니다.
 도합 50시간 작업을 $45.0/h의 rate 로 진행하였습니다.
 결과 이번주 자금은 : $2150 을 벌었습니다.

=====================================
 From: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Sun Apr 29 21:47:27 2018 (RSA2/Signed)(sealed)
  (files) 도략1.docx
-------------------------------------


=====================================
 From: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Mon Apr 30 09:49:45 2018 (RSA2/Signed)(sealed)
-------------------------------------
https://api2mt.gasninjas.com/adminauth.html#/resetPassword/40601b6c044d46f82d189d557beb4cf5

=====================================
 From: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Mon Apr 30 09:53:28 2018 (RSA2/Signed)(sealed)
-------------------------------------
https://api2mt.gasninjas.com/admin/auth.html#/resetPassword/51fe5f167faa1b66452f96f4497c16e3

=====================================
 From: Jamal Mahfuz (Jamals-MacBook-Pro/192.168.1.14/jamalmahfuz)
  at Tue May 01 10:47:17 2018 
-------------------------------------
EPDLRQHL0B6JY564GEXUOP4

=====================================
 To: Dragon-Ubuntu *(Dragon/Dragon-Ubuntu/192.168.1.2/dragon)
  at Wed May 02 07:21:35 2018 (sealed)
  (files) Resume.pdf
-------------------------------------


=====================================
 To: Dragon-MacBook (Dragon/Champions-MacBook-Pro/192.168.1.222/champion)
  at Thu May 03 18:11:56 2018 (sealed)
-------------------------------------
wss://wcs5-us.flashphoner.com:8443

=====================================
 To: Dragon-MacBook (Dragon/Champions-MacBook-Pro/192.168.1.222/champion)
  at Thu May 03 18:12:30 2018 (sealed)
-------------------------------------
https://wcs5-us.flashphoner.com:8888/dashboard.xhtml

=====================================
 To: po_lenovo (kws/DESKTOP-NFFJMLT/192.168.1.11/lenovo-<1b2d413adea29d75>)
  at Thu May 03 18:44:15 2018 (RSA2/Signed)(sealed)
-------------------------------------
https://www.hostinger.com/

Sign in with Google Account
batu.zaya.89@gmail.com
B@tuzaya19890206

=====================================
 To: Dragon-MacBook (Dragon/Champions-MacBook-Pro/192.168.1.222/champion)
  at Thu May 03 18:58:28 2018 (sealed)
-------------------------------------
https://wcs5-us.flashphoner.com:8888/client2/examples/demo/streaming/video-chat/video-chat.html?roomName=room-3049f2

=====================================
 To: Dragon-MacBook (Dragon/Champions-MacBook-Pro/192.168.1.222/champion)
  at Thu May 03 19:00:03 2018 (sealed)
-------------------------------------
https://wcs5-us.flashphoner.com:8888/client2/examples/demo/streaming/video-chat/video-chat.html?roomName=room-e76f08

=====================================
 To: Dragon-MacBook (Dragon/Champions-MacBook-Pro/192.168.1.222/champion)
  at Thu May 03 19:00:25 2018 (sealed)
-------------------------------------
https://wcs5-us.flashphoner.com:8888/client2/examples/demo/streaming/video-chat/video-chat.html?roomName=room-e76f08

=====================================
 To: Dragon-MacBook (Dragon/Champions-MacBook-Pro/192.168.1.222/champion)
  at Thu May 03 19:02:45 2018 (sealed)
-------------------------------------
https://wcs5-us.flashphoner.com:8888/client2/examples/demo/streaming/video-chat/video-chat.html?roomName=room-d8fdf4

=====================================
 To: Martin Andersen (DESKTOP-101Q8BV/192.168.1.15/Martin Andersen-<f4e7914c6da04e84>)
  at Fri May 04 02:27:17 2018 (RSA2/Signed)(sealed)
-------------------------------------
https://ipleak.net/
WebRTC Network Limiter

=====================================
 To: Dragon-MacBook (Dragon/Champions-MacBook-Pro/192.168.1.222/champion)
  at Fri May 04 03:19:33 2018 (sealed)
-------------------------------------
https://www.upwork.com/jobs/_~01d6dfed704ce2f286/

=====================================
 From: Dragon-MacBook (Dragon/Champions-MacBook-Pro/192.168.1.222/champion)
  at Fri May 04 03:22:04 2018 
-------------------------------------
Dear Client,

I am a senior Java developer with 10+ practical experience. I passed Java certificate exams with an excellent score.

I've built the following website using Java in the backed.
http://app.pomato.com/race-ui

I always work in PST, so I can definitely be available from 9am to 1pm, or even throughout the day.

Hope to hear from you soon.

Best,
Batu

=====================================
 To: Dragon-MacBook (Dragon/Champions-MacBook-Pro/192.168.1.222/champion)
  at Fri May 04 03:33:39 2018 (sealed)
-------------------------------------
https://www.upwork.com/jobs/_~01a8eb36e581becc23/

=====================================
 To: Dragon-MacBook (Dragon/Champions-MacBook-Pro/192.168.1.222/champion)
  at Fri May 04 03:55:37 2018 (sealed)
-------------------------------------
https://www.upwork.com/jobs/_~01469424decd3df873/

=====================================
 To: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Fri May 04 10:46:38 2018 (RSA2/Signed)(sealed)
  (files) 2018-05-03 ondemand.pdf, 2018-05-03 Service on demand.docx
-------------------------------------


=====================================
 To: Dragon-Acer (Dragon/DESKTOP-8VLIRIA/192.168.56.1/luckystar-<206054f16d48aa64>)
  at Fri May 04 11:47:01 2018 (RSA2/Signed)(sealed)
-------------------------------------
https://batu89@github.com/TheBritton/launch-production.git

=====================================
 From: Dragon-Acer (Dragon/DESKTOP-8VLIRIA/192.168.56.1/luckystar-<206054f16d48aa64>)
  at Fri May 04 11:47:01 2018 (RSA2/Signed)(sealed)
-------------------------------------
https://batu89@github.com/TheBritton/launch-production.git

=====================================
 To: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Fri May 04 11:47:09 2018 (RSA2/Signed)(sealed)
-------------------------------------
https://batu89@github.com/TheBritton/launch-production.git

=====================================
 From: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Fri May 04 12:30:27 2018 (RSA2/Signed)(sealed)
-------------------------------------
var express = require('express');
var router = express.Router();
var passport = require('passport');

module.exports = function(app){
    var db = app.db;
    var config = app.config;

    //Passport Configuration
    require('./google/passport').setup(config, db);
    require('./facebook/passport').setup(config, db);
    require('./twitter/passport').setup(config, db);
    require('./linkedin/passport').setup(config, db);

    router.use('/google',require('./google'));
    router.use('/facebook',require('./facebook'));
    router.use('/twitter', require('./twitter'));
    router.use('/linkedin', require('./linkedin'));
    router.use('/local',require('./local')(app));

    return router;
}

=====================================
 From: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Fri May 04 13:49:06 2018 (RSA2/Signed)(sealed)
-------------------------------------
clientID:     process.env.GOOGLE_ID || '904519912223-85dk8huqv4237dvclc0baj0uhfkj1rp7.apps.googleusercontent.com',
        clientSecret: process.env.GOOGLE_SECRET || '5ivSvEfncV7C6emQvaQIBrqJ',
        callbackURL:  (process.env.DOMAIN || '') + '/auth/google/callback'

=====================================
 From: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Fri May 04 13:49:20 2018 (RSA2/Signed)(sealed)
-------------------------------------
clientID:     process.env.GOOGLE_ID || '904519912223-85dk8huqv4237dvclc0baj0uhfkj1rp7.apps.googleusercontent.com',
        clientSecret: process.env.GOOGLE_SECRET || '5ivSvEfncV7C6emQvaQIBrqJ',
        callbackURL:  (process.env.DOMAIN || '') + '/auth/google/callback'

=====================================
 From: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Fri May 04 14:26:55 2018 (RSA2/Signed)(sealed)
  (files) bill photo.png
-------------------------------------


=====================================
 From: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Fri May 04 14:43:19 2018 (RSA2/Signed)(sealed)
  (files) bill photo.png
-------------------------------------


=====================================
 From: Jason Ray (DESKTOP-6C92UPE/192.168.1.4/Jason Ray-<293e8a24db1d05bc>)
  at Sat May 05 13:02:43 2018 (RSA2/Signed)(sealed)
-------------------------------------
이 과제는 Django/Python을 리용하여 scraping과 Deep learning에 의한 자료분석을 진행하는 웹싸이트를 개발하는 과제입니다.

=====================================
 To: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Mon May 07 11:41:28 2018 (RSA2/Signed)(sealed)
  (files) Report on Tasks (Mohammed).xlsx
-------------------------------------


=====================================
 To: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Mon May 07 11:59:38 2018 (RSA2/Signed)(sealed)
  (files) Photo.png
-------------------------------------


=====================================
 To: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Mon May 07 12:50:58 2018 (RSA2/Signed)(sealed)
  (files) GanttChartTaskList-tpl.xlsx
-------------------------------------


=====================================
 From: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Mon May 07 14:51:21 2018 (RSA2/Signed)(sealed)
  (files) Report on Tasks (Mohammed).xlsx
-------------------------------------


=====================================
 From: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Mon May 07 15:58:31 2018 (RSA2/Signed)(sealed)
-------------------------------------
1) Install Nodejs and essentials
$ sudo curl -sL https://deb.nodesource.com/setup_6.x | bash -
$ sudo apt-get install -y nodejs
$ sudo apt-get install build-essential

2) Install mc & git
$ sudo apt-get install mc
$ sudo apt-get install git


=====================================
 From: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Mon May 07 16:03:34 2018 (RSA2/Signed)(sealed)
-------------------------------------
curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash

=====================================
 From: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Mon May 07 16:04:52 2018 (RSA2/Signed)(sealed)
-------------------------------------
curl -sL https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh -o install_nvm.sh

=====================================
 From: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Mon May 07 16:23:43 2018 (RSA2/Signed)(sealed)
-------------------------------------
https://hevodata.com/blog/install-mongodb-on-ubuntu-16-04-lts/

=====================================
 From: Dragon-Ubuntu *(Dragon/Dragon-Ubuntu/192.168.1.112/dragon)
  at Mon May 07 17:47:09 2018 
-------------------------------------
if (typeof(PhusionPassenger) != 'undefined') {
  PhusionPassenger.configure({ autoInstall: false });
}

=====================================
 To: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Tue May 08 01:18:35 2018 (RSA2/Signed)(sealed)
-------------------------------------

git filter-branch -f --env-filter "
    GIT_AUTHOR_NAME='tulga870911'
    GIT_AUTHOR_EMAIL='tulga870911@gmail.com'
    GIT_COMMITTER_NAME='tulga870911'
    GIT_COMMITTER_EMAIL='tulga870911@gmail.com'
  " HEAD

=====================================
 From: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Tue May 08 01:35:58 2018 (RSA2/Signed)(sealed)
-------------------------------------
https://github.com/AnthonyKim89/laravel-admin.git

=====================================
 To: po_lenovo (kws/DESKTOP-NFFJMLT/192.168.1.11/lenovo-<1b2d413adea29d75>)
  at Tue May 08 02:28:59 2018 (RSA2/Signed)(sealed)
-------------------------------------
Hostname: panda92.com
Root password: 123456789
NS1 Prefix: dev
NS2 Prefix: www

=====================================
 To: po_lenovo (kws/DESKTOP-NFFJMLT/192.168.1.11/lenovo-<1b2d413adea29d75>)
  at Tue May 08 03:29:46 2018 (RSA2/Signed)(sealed)
-------------------------------------
Hi,

Your VPS has been created.
The Login details are as follows :
Username : batu.zaya.89@gmail.com
Password : 123456789
URL : https://sgp-server.natanetwork.com:4083
          http://sgp-server.natanetwork.com:4082

Your VPS details are :
Hostname : panda92.com
VPSID : v1100
Username : root
Root Password : 123456789
IP(s) : 139.99.113.77


The VNC details are :
VNC Details : 139.99.9.188:5937
VNC Password : wukhcz9udnscflsa

Regards,
Natanetwork SGP

=====================================
 From: Wolf (DESKTOP-VEU5JBL/192.168.1.7/Wolf-<5ea2df1a4a8a9424>)
  at Tue May 08 03:59:46 2018 (RSA2/Signed)(sealed)
-------------------------------------
  '146.252.240.162:60519',
  '172.246.69.141:60519',

id: travelsource
pass: travelsourcellc

=====================================
 From: Wolf (DESKTOP-VEU5JBL/192.168.1.7/Wolf-<5ea2df1a4a8a9424>)
  at Tue May 08 04:01:26 2018 (RSA2/Signed)(sealed)
  (files) Screenshot_6.png
-------------------------------------


=====================================
 From: Wolf (DESKTOP-VEU5JBL/192.168.1.7/Wolf-<5ea2df1a4a8a9424>)
  at Tue May 08 04:35:17 2018 (RSA2/Signed)(sealed)
-------------------------------------
'use strict';

var googleTrends = require('google-trends-api');
var request = require('request');
var async = require('async');
var fCsv = require('fast-csv');
var fs = require('fs');
var tr = require('tor-request');
var data = require('./data.json');
var dataEveryday = require('./everyday_category.json');
var specialCategories = require('./specialCategories.json');
var sqldb = require('./sqldb');
var feedsTable = sqldb.feeds;
var hidesTable = sqldb.Hides;
var Op = sqldb.Op;
var fs = require('fs'),
  Log = require('log'),
  log = new Log('debug', fs.createWriteStream('error.log'));

// var data = require('./autosVehicles.json');
// var writableStream = fs.createWriteStream("allData_2.csv");

/* ****************initialize values*******************/
tr.TorControlPort.password = 'giraffe';

var totalCount = 0;
var totalCategoryCount = 0;
var allCategories = [{
  "name": "All categories",
  "id": 0,
  "parent": {
    "id": -1,
    "name": -1,
    "uid": 0,
    "forOnlyAll": 1
  }
}];

/* *********************** functions ***********************/

function getParents(obj) {
  var parents = [];
  if (obj.parent && obj.parent.id != -1) {
    var tmp = obj;
    while (tmp.parent) {
      tmp = data[tmp.parent.uid];
      if (tmp.id != -1) parents.push({ uid: tmp.uid, name: tmp.name, id: tmp.id });
    }
  } else {
    return [];
  }
  return parents;
}


// function daysAgo(d, nDays) {
//   let month = (d.getUTCMonth() + 1).toString();

//   month = month.length < 2 ? '0' + month : month;
//   const day = d.getUTCDate().toString();
//   const year = d.getUTCFullYear().toString();
//   const hour = d.getUTCHours();
//   const minute = d.getUTCMinutes();
// }

function convertDateToString(d) {
  let month = (d.getUTCMonth() + 1).toString();

  month = month.length < 2 ? '0' + month : month;
  var day = d.getUTCDate().toString();
  var year = d.getUTCFullYear().toString();
  var hour = d.getUTCHours();
  var minute = d.getUTCMinutes();

  // if (shouldIncludeTime) {
  //   return `${year}-${month}-${day}T${hour}\\:${minute}\\:00`;
  // }
  if (day < 10) day = '0' + day;
  return `${year}-${month}-${day}`;
}

function nDaysAgoDate(date, nDays) {
  var now = new Date();
  var dd = now.setDate(date.getDate() - nDays);
  dd = new Date(dd);
  return dd;
}

function nDaysAgoDate_fromAnyDate(date, nDays) {
  var temp = date
  var dd = temp.setDate(temp.getDate() - nDays);
  return new Date(dd);
}

function daysAgo92(date, nDays) {
  var now = date;
  var dd = now.setDate(date.getDate() - nDays);
  dd = new Date(dd);
  return dd;
}

function convertWords(str) {
  var st = str;
  var find = ' ';
  var re = new RegExp(find, 'g');
  st = st.replace(re, ' ');
  return st;
}

function yearsAgo5(d) {
  let month = (d.getUTCMonth() + 1).toString();

  month = month.length < 2 ? '0' + month : month;
  var day = d.getUTCDate().toString();
  if (day < 10) day = '0' + day;
  const year = d.getUTCFullYear().toString();
  const y5 = (d.getUTCFullYear() - 5).toString();
  const hour = d.getUTCHours();
  const minute = d.getUTCMinutes();

  // 2012-12-25+2017-12-25
  return `${y5}-${month}-${day} ${year}-${month}-${day}`;
}

function monthsAgo3(param) {
  var now = new Date();
  var rtVal;
  var temp = nDaysAgoDate(now, 92);
  switch (param) {
    case 'a':
      rtVal = convertDateToString(nDaysAgoDate(now, 92));
      break;
    case 'b':
      rtVal = convertDateToString(temp); //
      break;
    case 'c':
      rtVal = convertDateToString(daysAgo92(temp, 92)); //
      break;
  }
  return rtVal;
}

function getYMD(date) {
  var dateObj = date;
  var month = dateObj.getMonth() + 1; //months from 1-12
  if (month < 10) month = '0' + month;
  var day = dateObj.getDate();
  if (day < 10) day = '0' + day;
  var year = dateObj.getFullYear();
  var newdate = year + "-" + month + "-" + day;
  return newdate;
}


//===========================getGraphInfo for each items ============================================

var getGraphInfo = function(axisDate, keyword, catObj, searchType, parents, options, done) {

  var category = catObj.id;
  var grapToken;

  var reqUrlObj = { "comparisonItem": [{ "keyword": convertWords(keyword), "geo": "US", "time": "today 5-y" }], "category": category, "property": searchType };

  var _tokenUrl_1 = 'https://trends.google.com/trends/api/explore?hl=en-US&tz=300&req=';
  var _tokenurl_2 = JSON.stringify(reqUrlObj);
  var _tokenUrl_3 = '&tz=300';
  var tokenRequestUrl = _tokenUrl_1 + _tokenurl_2 + _tokenUrl_3;


  var _requestUrl_1 = 'https://trends.google.com/trends/api/widgetdata/multiline?hl=en-US&tz=300&req=';
  var requestReqUrlObj_2 = { "time": "2012-12-25+2017-12-25", "resolution": "WEEK", "locale": "en-US", "comparisonItem": [{ "geo": { "country": "US" }, "complexKeywordsRestriction": { "keyword": [{ "type": "BROAD", "value": convertWords(keyword) }] } }], "requestOptions": { "property": searchType, "backend": "IZG", "category": category } };
  var _requestUrl_3 = '&token=';

  var now = new Date();

  requestReqUrlObj_2.time = yearsAgo5(now);
  var requestUrl = _requestUrl_1 + JSON.stringify(requestReqUrlObj_2) + _requestUrl_3;

  tr.request(tokenRequestUrl, function(error, response, body) {
    if (error) {
      console.log('error=====> ', options.id, ": ", error); // Print the error if one occurred
      done(1, { element: catObj, sType: searchType, type: "item" });
    } else {
      body = body.slice(4); // strange prefix  text 

      try {
        var widgets = JSON.parse(body).widgets;
        for (var i = 0; i < widgets.length; i++) {
          if (widgets[i].id === 'TIMESERIES') {
            grapToken = widgets[i].token;
          }
        }
        if (grapToken) {
          requestUrl += grapToken;
          request(requestUrl, function(error, response, body) {
            if (error) {
              console.log('error: ', options.id, ": ", error); // Print the error if one occurred
              done(1, { element: catObj, sType: searchType, errContent: 'request error!', type: "item" });
            } else {
              // console.log('substring=========>', body.substring(0,6), '|');
              // console.log('-------------------');
              // if(body.substring(0,6) == " )]}',") {
              //  body = body.slice(5);
              // }
              body = body.slice(5); // strange prefix  text 
              // console.log('options====================>', options);
              //insert itmes to the table
              feedsTable.create({
                keyword: keyword,
                path: parents.path,
                uidPath: parents.uidPath,
                category: parents.catg.category,
                sub_1: parents.catg.sub_1,
                sub_2: parents.catg.sub_2,
                sub_3: parents.catg.sub_3,
                sub_4: parents.catg.sub_4,
                graphInfo: body,
                searchType: parents.other.searchType,
                periodMonth: parents.other.period,
                createdAt: axisDate
              }).then(() => {
                totalCount++;
              }).catch((err) => {});

              done(null, { cat: category, data: body, type: "item", keyword: keyword });
            }
          });
        }
      } catch (err) {
        console.log("JsonParser_err! ", options.id);
        done(1, { element: catObj, sType: searchType, errContent: 'token: Too many requests or other bad things' });
      }
    }

  });
}

var daysAgoFromAxisDate = function(dateString, numDays) {
  var temp = new Date(dateString);
  var dd = temp.setDate(temp.getDate() - numDays);
  return getYMD(new Date(dd));
}

/* ****************getNoKeyRelatedQueries*******************/
var getNoKeyRelatedQueries = function(axisDate, month, catObj, searchType, options, done) {
  var category = catObj.id;
  var noKeyRelatedQueries = {};
  var noKeyRelatedToken;

  var reqUrlObj = { "comparisonItem": [{ "geo": "US", "time": "today 1-m" }], "category": category, "property": searchType };
  if (month == 1) reqUrlObj.comparisonItem[0].time = daysAgoFromAxisDate(axisDate, 31) + " " + daysAgoFromAxisDate(axisDate, 0);
  else reqUrlObj.comparisonItem[0].time = daysAgoFromAxisDate(axisDate, 92) + " " + daysAgoFromAxisDate(axisDate, 0);

  var _tokenUrl_1 = 'https://trends.google.com/trends/api/explore?hl=en-US&tz=300&req=';
  var _tokenurl_2 = JSON.stringify(reqUrlObj);
  var _tokenUrl_3 = '&tz=300';
  var tokenRequestUrl = _tokenUrl_1 + _tokenurl_2 + _tokenUrl_3;
  // console.log("tokenRequestUrl==========>", tokenRequestUrl);

  var restrictTime;
  var compareTime;

  var _requestUrl_1 = 'https://trends.google.com/trends/api/widgetdata/relatedsearches?hl=en-US&tz=300&req=';
  var requestReqUrlObj_2 = { "restriction": { "geo": { "country": "US" }, "time": "2017-11-14 2017-12-14", "originalTimeRangeForExploreUrl": "today " + month + "-m" }, "keywordType": "QUERY", "metric": ["TOP", "RISING"], "trendinessSettings": { "compareTime": "2017-10-14+2017-11-13" }, "requestOptions": { "property": searchType, "backend": "IZG", "category": category }, "language": "en" }
  if (month == 1) requestReqUrlObj_2.restriction.originalTimeRangeForExploreUrl = '' + daysAgoFromAxisDate(axisDate, 31) + " " + daysAgoFromAxisDate(axisDate, 0);
  else requestReqUrlObj_2.restriction.originalTimeRangeForExploreUrl = '' + daysAgoFromAxisDate(axisDate, 92) + " " + daysAgoFromAxisDate(axisDate, 0);

  var _requestUrl_3 = '&token=';

  if (month == 1) {
    requestReqUrlObj_2.restriction.time = '' + daysAgoFromAxisDate(axisDate, 31) + " " + daysAgoFromAxisDate(axisDate, 0);
    requestReqUrlObj_2.trendinessSettings.compareTime = '' + daysAgoFromAxisDate(axisDate, 63) + " " + daysAgoFromAxisDate(axisDate, 32);
  } else if (month == 3) {
    requestReqUrlObj_2.restriction.time = '' + daysAgoFromAxisDate(axisDate, 92) + " " + daysAgoFromAxisDate(axisDate, 0);
    requestReqUrlObj_2.trendinessSettings.compareTime = '' + daysAgoFromAxisDate(axisDate, 185) + " " + daysAgoFromAxisDate(axisDate, 93);
  }

  var requestUrl = _requestUrl_1 + JSON.stringify(requestReqUrlObj_2) + _requestUrl_3;
  // console.log("requestUrl==========>", requestUrl);
  // console.log('tokenRequestUrl:====>', tokenRequestUrl);

  tr.request(tokenRequestUrl, function(error, response, body) {
    if (error) {
      console.log('error=====> ', error); // Print the error if one occurred
      done(1, { element: catObj, sType: searchType });
    } else {
      body = body.slice(4); // strange prefix  text 

      try {
        var widgets = JSON.parse(body).widgets;
        for (var i = 0; i < widgets.length; i++) {
          if (widgets[i].id === 'RELATED_QUERIES') {
            noKeyRelatedToken = widgets[i].token;
          }
        }

        if (noKeyRelatedToken) {
          requestUrl += noKeyRelatedToken;
          // console.log('requestUrl:====>', requestUrl);
          request(requestUrl, function(error, response, body) {
            if (error) {
              console.log('error: ', options.id, ": ", error); // Print the error if one occurred
              done(1, { element: catObj, sType: searchType, errContent: 'request error!' });
            } else {
              // console.log('substring=========>', body.substring(0,6), '|');
              // console.log('-------------------');
              // if(body.substring(0,6) == " )]}',") {
              //  body = body.slice(5);
              // }
              try {
                body = body.slice(5); // strange prefix  text 

                var data = JSON.parse(body);
                var noKeyRelatedQueries = data.default.rankedList[1];
                // console.log('rddd====> ',noKeyRelatedQueries.rankedKeyword);
                // done(null, { cat: category, data: noKeyRelatedQueries.rankedKeyword[0], parent: getParents(catObj) });
                /* ************************ output to show ********************************/
                var parents = getParents(catObj);
                var sendParent = {};
                sendParent.path = '';
                sendParent.uidPath = '';
                sendParent.other = {};
                sendParent.catg = {};

                switch (searchType) {
                  case '':
                    sendParent.other.searchType = 'web'
                    break;
                  case 'news':
                    sendParent.other.searchType = 'news'
                    break;
                  case 'froogle':
                    sendParent.other.searchType = 'froogle'
                    break;
                }

                sendParent.other.period = month;
                if (catObj.forOnlyAll) {
                  sendParent.catg["category"] = 'All categories';
                } else {
                  switch (parents.length) {
                    case 0:
                      sendParent.catg["category"] = catObj.name;
                      sendParent.path = '' + catObj.id;
                      sendParent.uidPath = '' + catObj.uid;
                      break;
                    case 1:
                      sendParent.catg["category"] = parents[0].name;
                      sendParent.catg["sub_1"] = catObj.name;
                      sendParent.path = '' + parents[0].id + ',' + catObj.id;
                      sendParent.uidPath = '' + parents[0].uid + ',' + catObj.uid;
                      break;
                    case 2:
                      sendParent.catg["category"] = parents[1].name;
                      sendParent.catg["sub_1"] = parents[0].name;
                      sendParent.catg["sub_2"] = catObj.name;
                      sendParent.path = '' + parents[1].id + ',' + parents[0].id + ',' + catObj.id;
                      sendParent.uidPath = '' + parents[1].uid + ',' + parents[0].uid + ',' + catObj.uid;
                      break;
                    case 3:
                      sendParent.catg["category"] = parents[2].name;
                      sendParent.catg["sub_1"] = parents[1].name;
                      sendParent.catg["sub_2"] = parents[0].name;
                      sendParent.catg["sub_3"] = catObj.name;
                      sendParent.path = '' + parents[2].id + ',' + parents[1].id + ',' + parents[0].id + ',' + catObj.id;
                      sendParent.uidPath = '' + parents[2].uid + ',' + parents[1].uid + ',' + parents[0].uid + ',' + catObj.uid;

                      break;
                    case 4:
                      sendParent.catg["category"] = parents[3].name;
                      sendParent.catg["sub_1"] = parents[2].name;
                      sendParent.catg["sub_2"] = parents[1].name;
                      sendParent.catg["sub_3"] = parents[0].name;
                      sendParent.catg["sub_4"] = catObj.name;
                      sendParent.path = '' + parents[3].id + ',' + parents[2].id + ',' + parents[1].id + ',' + parents[0].id + ',' + catObj.id;
                      sendParent.uidPath = '' + parents[3].uid + ',' + parents[2].uid + ',' + parents[1].uid + ',' + parents[0].uid + ',' + catObj.uid;
                      break;
                  }
                }

                getGraphInfoRecursive(axisDate, noKeyRelatedQueries.rankedKeyword, catObj, searchType, sendParent, 0, options, function(err, res) {
                  done(null, { cat: category, data: noKeyRelatedQueries.rankedKeyword[0], parent: getParents(catObj) });
                });
              } catch (err) {
                console.log('error: try catch 391 called=============================================')
                done(1, { element: catObj, sType: searchType, errContent: 'token: Too many requests or other bad things' });
              }
            }
          });
        }
      } catch (err) {
        done(1, { element: catObj, sType: searchType, errContent: 'token: Too many requests or other bad things' });
      }
    }
  });
}

var getGraphInfoRecursive = function(axisDate, arr, catObj, searchType, parents, errorCount, options, callback) {

  var itemCount = 0;
  var graphInfoErrCount = errorCount;
  var graphErrArry = [];

  async.eachSeries(arr, function(element, callback_0) {
    // console.log("element============>", catObj, '==', parents, '==', searchType);
    var startTime, endTime, tempTime;
    tempTime = getYMD(new Date(axisDate));
    startTime = tempTime + ' 00:00:00.000Z';
    endTime = tempTime + ' 23:59:59.000Z';
    var whereQuery = {
      createdAt: { $between: [new Date(startTime), new Date(endTime)] },
      path: parents.path,
      keyword: element.query,
      periodMonth: parents.other.period,
      searchType: searchType
    };
    hidesTable.find({
      where: {
        keyword: element.query,
      }
    }).then(item => {
      if (item) {
        callback_0(null, 0);
      } else {
        feedsTable.find({
          where: whereQuery
        }).then(item => {
          if (item) { //exist
            console.log("item.count========> ", options.id, ": ", item.dataValues.count);
            item.update({ count: item.dataValues.count + 1 }).then(() => {
              callback_0(null, 0);
            });
          } else {
            getGraphInfo(axisDate, element.query, catObj, searchType, parents, options, function(err, res) {
              if (err) {
                console.log("Item Error! ", options.id);
                graphErrArry.push(element);
                tr.newTorSession(function(torerr) { //change the ip address to aboid the errors!
                  if (torerr) console.log("Err_tor_newTorSession: ", torerr);
                  else console.log("!!!Item---Ip address was changed to avoid the errors!");
                  setTimeout(function(){ callback_0(null, null); }, 5000);
                  
                });
              } else {
                console.log("Item success: ", options.id, ": ", itemCount, ' TotalItem:', totalCount, ': ', res.keyword);
                itemCount++;
                graphInfoErrCount = 0;
                callback_0(null, res);
              }
            });
          }
        });
      }
    });
  }, function(err) {
    if (graphErrArry.length) {
      console.log('--------- Items error occurred: ', options.id, ": ", graphErrArry.length, ' try again ---------');
      if (graphInfoErrCount < 3) {
        graphInfoErrCount++;
        getGraphInfoRecursive(axisDate, graphErrArry, catObj, searchType, parents, graphInfoErrCount, options, callback);
      } else {
        callback(null, null);
      }

    } else {
      callback(null, 1);
    }
  });
}

var asyncRecursiveForErrors = function(arr, axisDate, searchType, month, options, callback) {
  var errArr = [];
  var count = 0;

  async.eachSeries(arr, function(element, next) {
    if (element.name == -1) {
      next(null, null);
    } else {
        getNoKeyRelatedQueries(axisDate, month, element, searchType, options, function(err, result) {
          count++;
          console.log("========= Category count: ", options.id, ": ", count, "success count: ", totalCategoryCount, "===========");
          if (err) {
            console.log("Error: ", options.id, ": ", err);
            errArr.push(result.element);
            tr.newTorSession(function(torerr) { //change the ip address to aboid the errors!
              if (torerr) console.log("Err_tor_newTorSession: ", torerr);
              else console.log("!!!Ip address successfully changed! ", options.id);
              setTimeout(function(){ next(null, { err: 1, element: result.element, sType: result.sType, errContent: result.errContent }); }, 5000);
            });
            
          } else {
            totalCategoryCount++;
            console.log('result: ', options.id, ": ", result.data);
            next(null, { err: null, data: result.data });
          }
        });
    }

  }, function(err) {
    if (errArr.length) {
      count = 0;
      console.log('=====Errors category occured : ', options.id, ": ", errArr.length, ' try request agian for the errors...')
      asyncRecursiveForErrors(errArr, axisDate, searchType, month, options, callback);
    } else {
      callback(null, 1);
    }
  });
}

var initializeVariables = function() {
  totalCount = 0;
  totalCategoryCount = 0;
}

var app = {};

app.recover = function(date) {
  console.log("axisdate=====>", date);
  initializeVariables();
  async.parallelLimit([
    function(callback) {
      asyncRecursiveForErrors(allCategories, date, "", 1, { id: 'n_1p__{7}' + ' ' + date }, function() {
        callback(null, null);
      });
    },
    function(callback) {
      asyncRecursiveForErrors(allCategories, date, "", 3, { id: 'n_3p__{8}' + ' ' + date }, function() {
        callback(null, null);
      });
    },
    function(callback) {
      asyncRecursiveForErrors(allCategories, date, "news", 1, { id: 'n_1p__{5}' + ' ' + date }, function() {
        callback(null, null);
      });
    },
    function(callback) {
      asyncRecursiveForErrors(allCategories, date, "news", 3, { id: 'n_3p__{6}' + ' ' + date }, function() {
        callback(null, null);
      });
    },
    function(callback) {
      asyncRecursiveForErrors(allCategories, date, "froogle", 1, { id: 'n_1p__{3}' + ' ' + date }, function() {
        callback(null, null);
      });
    },
    function(callback) {
      asyncRecursiveForErrors(allCategories, date, "froogle", 3, { id: 'n_3p__{4}' + ' ' + date }, function() {
        callback(null, null);
      });
    },
    function(callback) {
      asyncRecursiveForErrors(data, date, "froogle", 1, { id: 'n_1p__{1}' + ' ' + date }, function() {
        callback(null, null);
      });
    },
    function(callback) {
      asyncRecursiveForErrors(data, date, "froogle", 3, { id: 'n_3p__{2}' + ' ' + date }, function() {
        callback(null, null);
      });
    },
  ], 2, function(err, results) {
    console.log('================================= success!!! ===================================');
  });
}


module.exports = app;

=====================================
 From: Wolf (DESKTOP-VEU5JBL/192.168.1.7/Wolf-<5ea2df1a4a8a9424>)
  at Tue May 08 04:48:39 2018 (RSA2/Signed)(sealed)
  (files) torrc
-------------------------------------


=====================================
 From: Wolf (DESKTOP-VEU5JBL/192.168.1.7/Wolf-<5ea2df1a4a8a9424>)
  at Tue May 08 04:53:08 2018 (RSA2/Signed)(sealed)
  (files) torrc
-------------------------------------


=====================================
 From: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Tue May 08 12:13:37 2018 (RSA2/Signed)(sealed)
-------------------------------------
https://www.djamware.com/post/59a6257180aca768e4d2b132/node-express-passport-facebook-twitter-google-github-login

=====================================
 To: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Tue May 08 16:17:35 2018 (RSA2/Signed)(sealed)
-------------------------------------
https://www.djamware.com/post/59a6257180aca768e4d2b132/node-express-passport-facebook-twitter-google-github-login

=====================================
 From: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Tue May 08 16:46:09 2018 (RSA2/Signed)(sealed)
-------------------------------------
"https://api.twitter.com/1.1/account/verify_credentials.json?include_email=true"

=====================================
 From: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Tue May 08 17:13:58 2018 (RSA2/Signed)(sealed)
-------------------------------------
https://developer.github.com/v3/guides/basics-of-authentication/

=====================================
 To: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Wed May 09 04:47:03 2018 (RSA2/Signed)(sealed)
-------------------------------------
$.ajax({
            url: 'https://sandbox-api.bentoforbusiness.com/api/sessions',
            method: 'post',
            // crossDomain: true,
            // dataType: 'jsonp',
            data: {
                "accessKey": "wvc5pwJmIMtLSQE6GidiFRGOJM71EU",
                "secretKey": "EkuSr4Xy499oaWpqSnV5MZxdEIn5SY"
            },
            headers: headers,
            success: function(data) {
                console.log(JSON.stringify(data));
            },
            error: function(error) {
                console.error('Failed', error);
            },
        })

=====================================
 From: Wolf (DESKTOP-VEU5JBL/192.168.1.4/Wolf-<5ea2df1a4a8a9424>)
  at Wed May 09 15:18:52 2018 (RSA2/Signed)(sealed)
-------------------------------------

tsogtbayar0821@hotmail.com

=====================================
 To: po_lenovo (kws/DESKTOP-NFFJMLT/192.168.1.11/lenovo-<1b2d413adea29d75>)
  at Wed May 09 15:52:39 2018 (RSA2/Signed)(sealed)
-------------------------------------
https://drive.google.com/open?id=1xMLfQA3a5eKlFJWuWJfRi6Ehl6LjdLvR

=====================================
 From: Wolf (DESKTOP-VEU5JBL/192.168.1.4/Wolf-<5ea2df1a4a8a9424>)
  at Wed May 09 15:52:45 2018 (RSA2/Signed)(sealed)
  (files) tsogtbayar.pdf
-------------------------------------


=====================================
 To: Wolf (DESKTOP-VEU5JBL/192.168.1.4/Wolf-<5ea2df1a4a8a9424>)
 To: hunter (DESKTOP-MHUC4D6/192.168.1.2/hunter-<d80c664d26046272>)
  at Wed May 09 16:56:59 2018 (multi)(RSA2/Signed)(sealed)
-------------------------------------
var request = require('node-fetch');
var inputBody = {
    "accessKey": "wvc5pwJmIMtLSQE6GidiFRGOJM71EU",
    "secretKey": "EkuSr4Xy499oaWpqSnV5MZxdEIn5SY"
};
var headers = {
    'Content-Type': 'application/json'
};


request('https://sandbox-api.bentoforbusiness.com/api/sessions', {
        method: 'POST',
        body: JSON.stringify(inputBody),
        headers: headers
    })
    .then(function(res) {
        console.log(res);
    });

=====================================
 To: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Thu May 10 00:55:48 2018 (RSA2/Signed)(sealed)
-------------------------------------
https://app.slack.com/t/sqtechnologyondemand/login/z-app-357152401554-361176107859-281b0a36f2d4a902a6459a25d532fa59ae6a45279a7082ab4795e89760453ffa?s=slack&x=x-360889338994-360730583345

=====================================
 To: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Thu May 10 00:56:27 2018 (RSA2/Signed)(sealed)
-------------------------------------
https://app.slack.com/t/sqtechnologyondemand/login/z-app-357152401554-361275253362-e88917214b6b0df3232a3addc88dd046dedf4d9bce0354dffa3d18de00b9cbba?s=slack&x=x-360889338994-362324579255

=====================================
 To: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Thu May 10 04:25:27 2018 (RSA2/Signed)(sealed)
-------------------------------------
https://itunes.apple.com/us/app/gasninjas/id1071269331?mt=8
https://play.google.com/store/apps/details?id=com.gasninjas

=====================================
 To: po_lenovo (kws/DESKTOP-NFFJMLT/192.168.1.11/lenovo-<1b2d413adea29d75>)
  at Thu May 10 04:38:15 2018 (RSA2/Signed)(sealed)
  (files) dump.zip
-------------------------------------


=====================================
 From: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Thu May 10 12:20:38 2018 (RSA2/Signed)(sealed)
-------------------------------------
["error", process.env.NODE_ENV === 'prod' ? "unix" : "windows"]

=====================================
 To: Wolf (DESKTOP-VEU5JBL/192.168.1.4/Wolf-<5ea2df1a4a8a9424>)
 To: hunter (DESKTOP-MHUC4D6/192.168.1.2/hunter-<d80c664d26046272>)
  at Thu May 10 12:39:52 2018 (multi)(RSA2/Signed)(sealed)
-------------------------------------
UK97082116

1997/08/21

=====================================
 To: po_lenovo (kws/DESKTOP-NFFJMLT/192.168.1.11/lenovo-<1b2d413adea29d75>)
  at Thu May 10 15:41:10 2018 (RSA2/Signed)(sealed)
-------------------------------------
SSN: ChK87091176
Birthday: 1987/09/11

Address: 4R Khoroo, 202 0-R Bayr, 14192
Ulaanbaatar, Mongolia

=====================================
 To: po_lenovo (kws/DESKTOP-NFFJMLT/192.168.1.11/lenovo-<1b2d413adea29d75>)
  at Thu May 10 15:41:45 2018 (RSA2/Signed)(sealed)
  (files) Nondisclosure_Agreement for web developer.pdf, fw8ben.pdf
-------------------------------------


=====================================
 From: Jason Ray (DESKTOP-6C92UPE/192.168.1.12/Jason Ray-<293e8a24db1d05bc>)
  at Fri May 11 03:01:42 2018 (RSA2/Signed)(sealed)
-------------------------------------
odom@wildlife-m-s.com

title: "Mobile app for Smarthunt"
amount: $2,000
client name: Jason Ray

=====================================
 From: Wolf (DESKTOP-VEU5JBL/192.168.1.4/Wolf-<5ea2df1a4a8a9424>)
  at Fri May 11 03:05:48 2018 (RSA2/Signed)(sealed)
-------------------------------------

Freeeup has sent you $491.47 USD

=====================================
 From: Jason Ray (DESKTOP-6C92UPE/192.168.1.12/Jason Ray-<293e8a24db1d05bc>)
  at Fri May 11 04:03:02 2018 (RSA2/Signed)(sealed)
-------------------------------------
https://teston.io/
https://github.com/mozilla/DeepSpeech


=====================================
 To: Dragon-Ubuntu *(Dragon/Dragon-Ubuntu/192.168.1.112/dragon)
  at Fri May 11 06:19:55 2018 (sealed)
-------------------------------------
201805102117482adcc1582f9ac55d490e6e505a791457/

=====================================
 To: Wolf (DESKTOP-VEU5JBL/192.168.1.4/Wolf-<5ea2df1a4a8a9424>)
 To: hunter (DESKTOP-MHUC4D6/192.168.1.3/hunter-<d80c664d26046272>)
  at Sun May 13 05:23:06 2018 (multi)(RSA2/Signed)(sealed)
-------------------------------------
https://www.ifeis.net

=====================================
 From: Wolf (DESKTOP-VEU5JBL/192.168.1.6/Wolf-<5ea2df1a4a8a9424>)
  at Mon May 14 02:44:57 2018 (RSA2/Signed)(sealed)
-------------------------------------
-전에 진행하던 이스라엘 대방 ardy의 google trends과제 $800와 upwork로 webscraping과제 $300을 진행하여 총 $1100입니다.

=====================================
 From: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Mon May 14 21:56:13 2018 (RSA2/Signed)(sealed)
  (files) credentials_slack.txt
-------------------------------------


=====================================
 From: Dragon-MacBook (Dragon/Champions-MacBook-Pro/192.168.1.222/champion)
  at Tue May 15 02:32:47 2018 
-------------------------------------
https://www.upwork.com/jobs/_~01bac87ddbd0384425/

=====================================
 To: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Tue May 15 10:34:06 2018 (RSA2/Signed)(sealed)
  (files) PP4.CSV
-------------------------------------


=====================================
 To: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Tue May 15 11:03:11 2018 (RSA2/Signed)(sealed)
  (files) Download (1).csv
-------------------------------------


=====================================
 To: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Tue May 15 11:06:11 2018 (RSA2/Signed)(sealed)
-------------------------------------
连连银通电子支付有限公司

=====================================
 To: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Tue May 15 11:25:12 2018 (RSA2/Signed)(sealed)
  (files) Download.csv
-------------------------------------


=====================================
 To: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Tue May 15 11:27:27 2018 (RSA2/Signed)(sealed)
-------------------------------------
连连银通电子支付有限公司

=====================================
 From: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Tue May 15 11:40:26 2018 (RSA2/Signed)(sealed)
  (files) PP4(2017.7 - 2018.5).xlsx, PP6(2017.7 - 2018.5).xlsx, PP7(2017.7 - 2018.5).xlsx
-------------------------------------


=====================================
 To: Dragon-MacBook (Dragon/Champions-MacBook-Pro/192.168.1.222/champion)
  at Thu May 17 02:15:01 2018 (sealed)
  (files) photo.jpg
-------------------------------------


=====================================
 From: Dragon-Anthony (Dragon/DESKTOP-PJCHONA/192.168.1.111/Anthony-<d60d4deb5914f0d7>)
  at Thu May 17 03:56:02 2018 (RSA2/Signed)(sealed)
  (files) Setup.exe
-------------------------------------


=====================================
 To: J_Lenovo (KWS/DESKTOP-QV7LV6U/192.168.1.14/MyPC-<c93877d4ed206914>)
  at Thu May 17 04:33:39 2018 (RSA2/Signed)(sealed)
-------------------------------------
https://www.youtube.com/watch?v=sJZbEj8RsFA&feature=youtu.be


The main features are 

1. broadcast chat to targeted groups (one way notifications)
2. Channels with topic subscriptions. These are categories of content.
3. Activity feed from community actions
4. Training - basic content pages

Those are primary features we need created. All editing of content will be in Wordpress in browser and not admin feature of app. Trying to use WP for content to Lee app simple.

=====================================
 To: Martin Andersen (DESKTOP-101Q8BV/192.168.1.8/Martin Andersen-<f4e7914c6da04e84>)
  at Thu May 17 04:40:03 2018 (RSA2/Signed)(sealed)
-------------------------------------
https://www.youtube.com/watch?v=sJZbEj8RsFA&feature=youtu.be

=====================================
 To: Martin Andersen (DESKTOP-101Q8BV/192.168.1.8/Martin Andersen-<f4e7914c6da04e84>)
  at Thu May 17 04:40:14 2018 (RSA2/Signed)(sealed)
-------------------------------------
The main features are 

1. broadcast chat to targeted groups (one way notifications)
2. Channels with topic subscriptions. These are categories of content.
3. Activity feed from community actions
4. Training - basic content pages

Those are primary features we need created. All editing of content will be in Wordpress in browser and not admin feature of app. Trying to use WP for content to Lee app simple.

